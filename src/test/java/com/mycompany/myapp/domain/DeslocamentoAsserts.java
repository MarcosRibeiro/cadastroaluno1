package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DeslocamentoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDeslocamentoAllPropertiesEquals(Deslocamento expected, Deslocamento actual) {
        assertDeslocamentoAutoGeneratedPropertiesEquals(expected, actual);
        assertDeslocamentoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDeslocamentoAllUpdatablePropertiesEquals(Deslocamento expected, Deslocamento actual) {
        assertDeslocamentoUpdatableFieldsEquals(expected, actual);
        assertDeslocamentoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDeslocamentoAutoGeneratedPropertiesEquals(Deslocamento expected, Deslocamento actual) {
        assertThat(expected)
            .as("Verify Deslocamento auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDeslocamentoUpdatableFieldsEquals(Deslocamento expected, Deslocamento actual) {
        assertThat(expected)
            .as("Verify Deslocamento relevant properties")
            .satisfies(e -> assertThat(e.getNome()).as("check nome").isEqualTo(actual.getNome()))
            .satisfies(e -> assertThat(e.getGrau()).as("check grau").isEqualTo(actual.getGrau()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDeslocamentoUpdatableRelationshipsEquals(Deslocamento expected, Deslocamento actual) {
        assertThat(expected)
            .as("Verify Deslocamento relationships")
            .satisfies(e -> assertThat(e.getCadastroAluno()).as("check cadastroAluno").isEqualTo(actual.getCadastroAluno()));
    }
}
