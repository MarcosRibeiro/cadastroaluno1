package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ResponsavelAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertResponsavelAllPropertiesEquals(Responsavel expected, Responsavel actual) {
        assertResponsavelAutoGeneratedPropertiesEquals(expected, actual);
        assertResponsavelAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertResponsavelAllUpdatablePropertiesEquals(Responsavel expected, Responsavel actual) {
        assertResponsavelUpdatableFieldsEquals(expected, actual);
        assertResponsavelUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertResponsavelAutoGeneratedPropertiesEquals(Responsavel expected, Responsavel actual) {
        assertThat(expected)
            .as("Verify Responsavel auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertResponsavelUpdatableFieldsEquals(Responsavel expected, Responsavel actual) {
        assertThat(expected)
            .as("Verify Responsavel relevant properties")
            .satisfies(e -> assertThat(e.getNome()).as("check nome").isEqualTo(actual.getNome()))
            .satisfies(e -> assertThat(e.getParentesco()).as("check parentesco").isEqualTo(actual.getParentesco()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertResponsavelUpdatableRelationshipsEquals(Responsavel expected, Responsavel actual) {
        assertThat(expected)
            .as("Verify Responsavel relationships")
            .satisfies(e -> assertThat(e.getCadastroAluno()).as("check cadastroAluno").isEqualTo(actual.getCadastroAluno()));
    }
}
